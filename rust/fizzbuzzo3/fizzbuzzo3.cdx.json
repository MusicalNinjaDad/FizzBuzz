{
  "bomFormat": "CycloneDX",
  "specVersion": "1.3",
  "version": 1,
  "serialNumber": "urn:uuid:72d1a474-cb84-4856-830c-dc540d4daaff",
  "metadata": {
    "timestamp": "2024-05-29T05:17:09.544212539Z",
    "tools": [
      {
        "vendor": "CycloneDX",
        "name": "cargo-cyclonedx",
        "version": "0.5.1"
      }
    ],
    "component": {
      "type": "library",
      "bom-ref": "path+file:///workspaces/FizzBuzz/rust/fizzbuzzo3#1.3.0",
      "name": "fizzbuzzo3",
      "version": "1.3.0",
      "scope": "required",
      "purl": "pkg:cargo/fizzbuzzo3@1.3.0?download_url=file%253A%252F%252F.",
      "components": [
        {
          "type": "library",
          "bom-ref": "path+file:///workspaces/FizzBuzz/rust/fizzbuzzo3#1.3.0 bin-target-0",
          "name": "fizzbuzzo3",
          "version": "1.3.0",
          "purl": "pkg:cargo/fizzbuzzo3@1.3.0?download_url=file%253A%252F%252F.#src/lib.rs"
        }
      ]
    }
  },
  "components": [
    {
      "type": "library",
      "bom-ref": "path+file:///workspaces/FizzBuzz/rust/fizzbuzz#2.1.0",
      "name": "fizzbuzz",
      "version": "2.1.0",
      "scope": "required",
      "purl": "pkg:cargo/fizzbuzz@2.1.0?download_url=file%253A%252F%252F..%25252Ffizzbuzz"
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0",
      "name": "autocfg",
      "version": "1.3.0",
      "description": "Automatic cfg for Rust compiler features",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/autocfg@1.3.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/autocfg/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/cuviper/autocfg"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
      "name": "cfg-if",
      "version": "1.0.0",
      "description": "A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cfg-if@1.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cfg-if"
        },
        {
          "type": "website",
          "url": "https://github.com/alexcrichton/cfg-if"
        },
        {
          "type": "vcs",
          "url": "https://github.com/alexcrichton/cfg-if"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.5",
      "name": "crossbeam-deque",
      "version": "0.8.5",
      "description": "Concurrent work-stealing deque",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "613f8cc01fe9cf1a3eb3d7f488fd2fa8388403e97039e2f73692932e291a770d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crossbeam-deque@0.8.5",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-deque"
        },
        {
          "type": "vcs",
          "url": "https://github.com/crossbeam-rs/crossbeam"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
      "name": "crossbeam-epoch",
      "version": "0.9.18",
      "description": "Epoch-based garbage collection",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5b82ac4a3c2ca9c3460964f020e1402edd5753411d7737aa39c3714ad1b5420e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crossbeam-epoch@0.9.18",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch"
        },
        {
          "type": "vcs",
          "url": "https://github.com/crossbeam-rs/crossbeam"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.19",
      "name": "crossbeam-utils",
      "version": "0.8.19",
      "description": "Utilities for concurrent programming",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crossbeam-utils@0.8.19",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils"
        },
        {
          "type": "vcs",
          "url": "https://github.com/crossbeam-rs/crossbeam"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#either@1.11.0",
      "name": "either",
      "version": "1.11.0",
      "description": "The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a47c1c47d2f5964e29c61246e81db715514cd532db6b5116a25ea3c03d6780a2"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/either@1.11.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/either/1/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rayon-rs/either"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
      "name": "equivalent",
      "version": "1.0.1",
      "description": "Traits for key comparison in maps.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/equivalent@1.0.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/cuviper/equivalent"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#glob@0.3.1",
      "name": "glob",
      "version": "0.3.1",
      "description": "Support for matching file paths against Unix shell style patterns. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/glob@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/glob/0.3.1"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/glob"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/glob"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
      "name": "hashbrown",
      "version": "0.14.5",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.14.5",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#heck@0.4.1",
      "name": "heck",
      "version": "0.4.1",
      "description": "heck is a case conversion library.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/heck@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/heck"
        },
        {
          "type": "website",
          "url": "https://github.com/withoutboats/heck"
        },
        {
          "type": "vcs",
          "url": "https://github.com/withoutboats/heck"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.2.6",
      "name": "indexmap",
      "version": "2.2.6",
      "description": "A hash table with consistent order and fast iteration.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "168fb715dda47215e360912c096649d23d58bf392ac62f73919e831745e40f26"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/indexmap@2.2.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indexmap/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/indexmap-rs/indexmap"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.5",
      "name": "indoc",
      "version": "2.0.5",
      "description": "Indented document literals",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/indoc@2.0.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indoc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/indoc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.11",
      "name": "itoa",
      "version": "1.0.11",
      "description": "Fast integer primitive to string conversion",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "49f1f14873335454500d59611f1cf4a4b0f786f9ac11f4312a78e4cf2566695b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/itoa@1.0.11",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/itoa"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/itoa"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.154",
      "name": "libc",
      "version": "0.2.154",
      "description": "Raw FFI bindings to platform libraries like libc. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ae743338b92ff9146ce83992f766a31066a91a8c84a45e0e9f21e7cf6de6d346"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libc@0.2.154",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/libc/"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/libc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/libc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
      "name": "lock_api",
      "version": "0.4.12",
      "description": "Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/lock_api@0.4.12",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.2",
      "name": "memchr",
      "version": "2.7.2",
      "description": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte search and single substring search. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6c8640c5d730cb13ebd907d8d04b52f55ac9a2eec55b440c8892f40d56c76c1d"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/memchr@2.7.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/memchr/"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/memchr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/memchr"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
      "name": "memoffset",
      "version": "0.9.1",
      "description": "offset_of functionality for Rust structs.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/memoffset@0.9.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Gilnaa/memoffset"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.19.0",
      "name": "once_cell",
      "version": "1.19.0",
      "description": "Single assignment cells and lazy values.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/once_cell@1.19.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/once_cell"
        },
        {
          "type": "vcs",
          "url": "https://github.com/matklad/once_cell"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.2",
      "name": "parking_lot",
      "version": "0.12.2",
      "description": "More compact and efficient implementations of the standard synchronization primitives.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7e4af0ca4f6caed20e900d564c242b8e5d4903fdacf31d3daf527b66fe6f42fb"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/parking_lot@0.12.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
      "name": "parking_lot_core",
      "version": "0.9.10",
      "description": "An advanced API for creating custom synchronization primitives.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/parking_lot_core@0.9.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Amanieu/parking_lot"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.6.0",
      "name": "portable-atomic",
      "version": "1.6.0",
      "description": "Portable atomic types including support for 128-bit atomics, atomic float, etc. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7170ef9988bc169ba16dd36a7fa041e5c4cbeb6a35b76d4c03daded371eae7c0"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/portable-atomic@1.6.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/portable-atomic"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82",
      "name": "proc-macro2",
      "version": "1.0.82",
      "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8ad3d49ab951a01fbaafe34f2ec74122942fe18a3f9814c3268f1bb72042131b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro2@1.0.82",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/proc-macro2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/proc-macro2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.21.2",
      "name": "pyo3-build-config",
      "version": "0.21.2",
      "description": "Build configuration for the PyO3 ecosystem",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7883df5835fafdad87c0d888b266c8ec0f4c9ca48a5bed6bbb592e8dedee1b50"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pyo3-build-config@0.21.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/pyo3/pyo3"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyo3/pyo3"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-ffi@0.21.2",
      "name": "pyo3-ffi",
      "version": "0.21.2",
      "description": "Python-API bindings for the PyO3 ecosystem",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "01be5843dc60b916ab4dad1dca6d20b9b4e6ddc8e15f50c47fe6d85f1fb97403"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pyo3-ffi@0.21.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/pyo3/pyo3"
        },
        {
          "type": "other",
          "url": "python"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyo3/pyo3"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-macros-backend@0.21.2",
      "name": "pyo3-macros-backend",
      "version": "0.21.2",
      "description": "Code generation for PyO3 package",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "08260721f32db5e1a5beae69a55553f56b99bd0e1c3e6e0a5e8851a9d0f5a85c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pyo3-macros-backend@0.21.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/pyo3/pyo3"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyo3/pyo3"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-macros@0.21.2",
      "name": "pyo3-macros",
      "version": "0.21.2",
      "description": "Proc macros for PyO3 package",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "77b34069fc0682e11b31dbd10321cbf94808394c56fd996796ce45217dfac53c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pyo3-macros@0.21.2",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/pyo3/pyo3"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyo3/pyo3"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-testing@0.3.4",
      "name": "pyo3-testing",
      "version": "0.3.4",
      "description": "Simplified testing for pyo3-wrapped functions",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "997bb580ad43c9c61274e4baea4a4697b445c122be52516b71c46d58bbb79421"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/pyo3-testing@0.3.4",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/MusicalNinjas/pyo3-testing"
        },
        {
          "type": "vcs",
          "url": "https://github.com/MusicalNinjas/pyo3-testing"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3@0.21.2",
      "name": "pyo3",
      "version": "0.21.2",
      "description": "Bindings to Python interpreter",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a5e00b96a521718e08e03b1a622f01c8a8deb50719335de3f60b3b3950f069d8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pyo3@0.21.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crate/pyo3/"
        },
        {
          "type": "website",
          "url": "https://github.com/pyo3/pyo3"
        },
        {
          "type": "vcs",
          "url": "https://github.com/pyo3/pyo3"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36",
      "name": "quote",
      "version": "1.0.36",
      "description": "Quasi-quoting macro quote!(...)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/quote@1.0.36",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/quote/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/quote"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
      "name": "rayon-core",
      "version": "1.12.1",
      "description": "Core APIs for Rayon",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1465873a3dfdaa8ae7cb14b4383657caab0b3e8a0aa9ae8e04b044854c8dfce2"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rayon-core@1.12.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rayon/"
        },
        {
          "type": "other",
          "url": "rayon-core"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rayon-rs/rayon"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0",
      "name": "rayon",
      "version": "1.10.0",
      "description": "Simple work-stealing parallelism for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b418a60154510ca1a002a752ca9714984e21e4241e804d32555251faf8b78ffa"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rayon@1.10.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rayon/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rayon-rs/rayon"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
      "name": "ryu",
      "version": "1.0.18",
      "description": "Fast floating point to string conversion",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR BSL-1.0"
        }
      ],
      "purl": "pkg:cargo/ryu@1.0.18",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ryu"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/ryu"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
      "name": "scopeguard",
      "version": "1.2.0",
      "description": "A RAII scope guard that will run a given closure when it goes out of scope, even if the code between panics (assuming unwinding panic).  Defines the macros `defer!`, `defer_on_unwind!`, `defer_on_success!` as shorthands for guards with one of the implemented strategies. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/scopeguard@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/scopeguard/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bluss/scopeguard"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201",
      "name": "serde",
      "version": "1.0.201",
      "description": "A generic serialization/deserialization framework",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "780f1cebed1629e4753a1a38a3c72d30b97ec044f0aef68cb26650a3c5cf363c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde@1.0.201",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.201",
      "name": "serde_derive",
      "version": "1.0.201",
      "description": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c5e405930b9796f1c00bee880d03fc7e0bb4b9a11afc776885ffe84320da2865"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_derive@1.0.201",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://serde.rs/derive.html"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.117",
      "name": "serde_json",
      "version": "1.0.117",
      "description": "A JSON serialization file format",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "455182ea6142b14f93f4bc5320a2b31c1f266b66a4a5c858b013302a5d8cbfc3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_json@1.0.117",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde_json"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/json"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.6",
      "name": "serde_spanned",
      "version": "0.6.6",
      "description": "Serde-compatible spanned Value",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "79e674e01f999af37c49f70a6ede167a8a60b2503e56c5599532a65baa5969a0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_spanned@0.6.6",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/toml-rs/toml"
        },
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
      "name": "smallvec",
      "version": "1.13.2",
      "description": "'Small vector' optimization: store up to a small number of items on the stack",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3c5e1a9a646d36c3599cd173a41282daf47c44583ad367b8e6837255952e5c67"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/smallvec@1.13.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/smallvec/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-smallvec"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.63",
      "name": "syn",
      "version": "2.0.63",
      "description": "Parser for Rust source code",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "bf5be731623ca1a1fb7d8be6f261a3be6d3e2337b8a1f97be944d020c8fcb704"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/syn@2.0.63",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/syn"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/syn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#target-lexicon@0.12.14",
      "name": "target-lexicon",
      "version": "0.12.14",
      "description": "Targeting utilities for compilers and related tools",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e1fc403891a21bcfb7c37834ba66a547a8f402146eba7265b5a6d88059c9ff2f"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 WITH LLVM-exception"
        }
      ],
      "purl": "pkg:cargo/target-lexicon@0.12.14",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/target-lexicon/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bytecodealliance/target-lexicon"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1",
      "name": "termcolor",
      "version": "1.4.1",
      "description": "A simple cross platform library for writing colored text to a terminal. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/termcolor@1.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/termcolor"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/termcolor"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/termcolor"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#toml@0.8.13",
      "name": "toml",
      "version": "0.8.13",
      "description": "A native Rust encoder and decoder of TOML-formatted files and streams. Provides implementations of the standard Serialize/Deserialize traits for TOML data to facilitate deserializing and serializing Rust structures. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a4e43f8cc456c9704c851ae29c67e17ef65d2c30017c17a9765b89c382dc8bba"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/toml@0.8.13",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/toml-rs/toml"
        },
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.6",
      "name": "toml_datetime",
      "version": "0.6.6",
      "description": "A TOML-compatible datetime type",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4badfd56924ae69bcc9039335b2e017639ce3f9b001c393c1b2d1ef846ce2cbf"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/toml_datetime@0.6.6",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/toml-rs/toml"
        },
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.13",
      "name": "toml_edit",
      "version": "0.22.13",
      "description": "Yet another format-preserving TOML parser.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c127785850e8c20836d49732ae6abfa47616e60bf9d9f57c43c250361a9db96c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/toml_edit@0.22.13",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#trybuild@1.0.96",
      "name": "trybuild",
      "version": "1.0.96",
      "description": "Test harness for ui tests of compiler diagnostics",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "33a5f13f11071020bb12de7a16b925d2d58636175c20c11dc5f96cb64bb6c9b3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/trybuild@1.0.96",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/trybuild"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/trybuild"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12",
      "name": "unicode-ident",
      "version": "1.0.12",
      "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b"
        }
      ],
      "licenses": [
        {
          "expression": "(MIT OR Apache-2.0) AND Unicode-DFS-2016"
        }
      ],
      "purl": "pkg:cargo/unicode-ident@1.0.12",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/unicode-ident"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/unicode-ident"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unindent@0.2.3",
      "name": "unindent",
      "version": "0.2.3",
      "description": "Remove a column of leading whitespace from a string",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c7de7d73e1754487cb58364ee906a499937a0dfabd86bcb980fa99ec8c8fa2ce"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/unindent@0.2.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/unindent"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/indoc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.6.8",
      "name": "winnow",
      "version": "0.6.8",
      "description": "A byte-oriented, zero-copy, parser combinators library",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c3c52e9c97a68071b23e836c9380edae937f17b9c4667bd021973efc689f618d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/winnow@0.6.8",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/winnow-rs/winnow"
        }
      ]
    }
  ],
  "dependencies": [
    {
      "ref": "path+file:///workspaces/FizzBuzz/rust/fizzbuzz#2.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0"
      ]
    },
    {
      "ref": "path+file:///workspaces/FizzBuzz/rust/fizzbuzzo3#1.3.0",
      "dependsOn": [
        "path+file:///workspaces/FizzBuzz/rust/fizzbuzz#2.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3-testing@0.3.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-epoch@0.9.18",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.19",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#either@1.11.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#glob@0.3.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#heck@0.4.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.2.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.14.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.11",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.154",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.3.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.19.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#lock_api@0.4.12",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#parking_lot_core@0.9.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.154",
        "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.6.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#once_cell@1.19.0",
        "registry+https://github.com/rust-lang/crates.io-index#target-lexicon@0.12.14"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-ffi@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.154",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.21.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-macros-backend@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#heck@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.63"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-macros@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3-macros-backend@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.63"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3-testing@0.3.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.63",
        "registry+https://github.com/rust-lang/crates.io-index#trybuild@1.0.96"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pyo3@0.21.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.154",
        "registry+https://github.com/rust-lang/crates.io-index#memoffset@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#parking_lot@0.12.2",
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3-build-config@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3-ffi@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#pyo3-macros@0.21.2",
        "registry+https://github.com/rust-lang/crates.io-index#unindent@0.2.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-deque@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#crossbeam-utils@0.8.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rayon@1.10.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#either@1.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#rayon-core@1.12.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#scopeguard@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.201"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.201",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.63"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.117",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#itoa@1.0.11",
        "registry+https://github.com/rust-lang/crates.io-index#ryu@1.0.18",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#smallvec@1.13.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.63",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.82",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.36",
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#target-lexicon@0.12.14",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#toml@0.8.13",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201",
        "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.6",
        "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.6",
        "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.13"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.13",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.2.6",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201",
        "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.6",
        "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.6",
        "registry+https://github.com/rust-lang/crates.io-index#winnow@0.6.8"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#trybuild@1.0.96",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#glob@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.201",
        "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.201",
        "registry+https://github.com/rust-lang/crates.io-index#serde_json@1.0.117",
        "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#toml@0.8.13"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.12",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unindent@0.2.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.6.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.2"
      ]
    }
  ]
}