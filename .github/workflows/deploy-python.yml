name: Deploy Python
concurrency: ADO-twine

on:
  workflow_dispatch:
  push: 
    tags: "python-v*"

jobs:
  python-checks:
    uses: ./.github/workflows/python.yml

  rust-checks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Test fizzbuzzo3
      run: cargo test --workspace

  wheels:
    name: Build wheels on ${{ matrix.os }} - ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        target: ['*']
        include:
        - os: ubuntu-latest
          target: '*x86*'
        - os: ubuntu-latest
          target: '*i686*'
        - os: ubuntu-latest
          target: '*manylinux_aarch64*'
        - os: ubuntu-latest
          target: '*musllinux_aarch64*'
        - os: ubuntu-latest
          target: '*ppc64le*'
        - os: ubuntu-latest
          target: '*s390x*'
        exclude:
        - os: ubuntu-latest
          target: '*'
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.0
        env:
          CIBW_BUILD: ${{ matrix.target }}
        # with:
        #   package-dir: .
        #   output-dir: wheelhouse
        #   config-file: "{package}/pyproject.toml"
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
      
  sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build SDist
      run: pipx run build --sdist
    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz

  publish:
    environment: ADO-Packages
    needs: [python-checks, rust-checks, wheels, sdist]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true
    - name: Install tooling
      run: python -m pip install twine keyring artifacts-keyring
    - name: Upload to ADO
      env: 
        TWINE_REPOSITORY_URL: https://pkgs.dev.azure.com/MusicalNinjas/FizzBuzz/_packaging/FizzBuzz/pypi/upload/
        TWINE_USERNAME: FizzBuzz
        TWINE_PASSWORD: ${{ secrets.ADO_TOKEN }}
      run: twine upload --non-interactive dist/*